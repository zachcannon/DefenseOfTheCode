Phase 1:
	Part 1: (Create bad code)

		Identify the code smells -> What and Why
			In short answer format

	Part 2: (Get resources)

		Given a list of refactoring resources (websites, docs) choose some to use and why

		Refactor code and list techniques used

Phase 2:
	Part 1: (Using code from phase 1, add drinks and food directly to server)
		
		Add additional functionality to one of the classes that resulted from part 1
			Add two+ "subtypes" to item class

	Part 2: (Off the phase 1 code, add sub classes)
		
		Introduce inheritance/polymorphism 
			Give resources, sample code, and lab discussion		
		Apply principles (inheritance/polymorphism) to refactor code from Part 1

	Part 3: (Create list of possible answers)
		In essay format, reflect on (below) between the Part 1 and Part 2 code
			Readability, future extension/changes, code duplication, ect
			
Phase 3:
	Part 1: (Add functionality to code from end of phase 2)

		We want to give the servers ways to deal with tips differently. 
			One group of servers likes to be selfish and takes direct tips.
			Two group of servers puts all their tips in a community jar and splits them at the end of the night
		Make it happen
	